# Generated by Django 5.1.1 on 2025-06-02 05:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='task',
            options={'ordering': ['-ai_priority_score', '-created_at']},
        ),
        migrations.AddField(
            model_name='task',
            name='actual_hours',
            field=models.FloatField(blank=True, help_text='Actual time spent in hours', null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='depends_on',
            field=models.ManyToManyField(blank=True, related_name='dependents', to='tasks.task'),
        ),
        migrations.AddField(
            model_name='task',
            name='estimated_hours',
            field=models.FloatField(blank=True, help_text='Estimated time to complete in hours', null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='importance',
            field=models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=10),
        ),
        migrations.AddField(
            model_name='task',
            name='tags',
            field=models.CharField(blank=True, help_text='Comma-separated tags', max_length=200),
        ),
        migrations.AddField(
            model_name='task',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='task',
            name='urgency',
            field=models.CharField(choices=[('urgent', 'Urgent'), ('normal', 'Normal'), ('low', 'Low')], default='normal', max_length=10),
        ),
        migrations.AlterField(
            model_name='task',
            name='priority',
            field=models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('minimal', 'Minimal')], default='medium', max_length=10),
        ),
        migrations.AlterField(
            model_name='task',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15),
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='task_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.tasklist'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'status'], name='tasks_task_user_id_c0fce1_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['ai_priority_score'], name='tasks_task_ai_prio_4ee7b0_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['due_date'], name='tasks_task_due_dat_bce847_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tasklist',
            unique_together={('user', 'name')},
        ),
    ]
